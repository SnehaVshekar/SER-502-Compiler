State 22 conflicts: 6 shift/reduce
State 28 conflicts: 6 shift/reduce
State 43 conflicts: 2 shift/reduce
State 44 conflicts: 6 shift/reduce
State 45 conflicts: 6 shift/reduce
State 46 conflicts: 2 shift/reduce
State 47 conflicts: 2 shift/reduce
State 48 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program Block

    3 Block: END
    4      | exp

    5 exp: statement
    6    | exp PLUS exp
    7    | exp SUB exp
    8    | exp MULTIPLY exp
    9    | exp DIV exp
   10    | exp AND exp
   11    | exp OR exp
   12    | NOT exp
   13    | VAR
   14    | NUM
   15    | TRUE
   16    | FALSE

   17 statement: VAR EQUAL STRING
   18          | PRINT STRING
   19          | IF exp LSQUARE
   20          | RSQUARE
   21          | ELSE LSQUARE
   22          | WHILE exp LFLOWER
   23          | RFLOWER
   24          | READ VAR
   25          | PRINT exp
   26          | VAR EQUAL exp
   27          | LPAREN condition RPAREN

   28 condition: /* empty */
   29          | exp GREATER exp
   30          | exp LESS exp
   31          | exp ASSIGN exp


Terminals, with rules where they appear

$end (0) 0
error (256)
LFLOWER (258) 22
RFLOWER (259) 23
LSQUARE (260) 19 21
RSQUARE (261) 20
LPAREN (262) 27
RPAREN (263) 27
EQUAL (264) 17 26
GREATER (265) 29
LESS (266) 30
AND (267) 10
OR (268) 11
NOT (269) 12
ASSIGN (270) 31
TRUE (271) 15
FALSE (272) 16
PLUS (273) 6
SUB (274) 7
MULTIPLY (275) 8
DIV (276) 9
IF (277) 19
ELSE (278) 21
WHILE (279) 22
READ (280) 24
PRINT (281) 18 25
END (282) 3
NUM (283) 14
VAR (284) 13 17 24 26
STRING (285) 17 18


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
Program (32)
    on left: 1 2, on right: 0 2
Block (33)
    on left: 3 4, on right: 2
exp (34)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 4 6 7 8 9 10
    11 12 19 22 25 26 29 30 31
statement (35)
    on left: 17 18 19 20 21 22 23 24 25 26 27, on right: 5
condition (36)
    on left: 28 29 30 31, on right: 27


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . Block

    $end     shift, and go to state 2
    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    END      shift, and go to state 14
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    Block      go to state 17
    exp        go to state 18
    statement  go to state 19


state 2

    0 $accept: Program $end .

    $default  accept


state 3

   23 statement: RFLOWER .

    $default  reduce using rule 23 (statement)


state 4

   20 statement: RSQUARE .

    $default  reduce using rule 20 (statement)


state 5

   27 statement: LPAREN . condition RPAREN

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    $default  reduce using rule 28 (condition)

    exp        go to state 20
    statement  go to state 19
    condition  go to state 21


state 6

   12 exp: NOT . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 22
    statement  go to state 19


state 7

   15 exp: TRUE .

    $default  reduce using rule 15 (exp)


state 8

   16 exp: FALSE .

    $default  reduce using rule 16 (exp)


state 9

   19 statement: IF . exp LSQUARE

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 23
    statement  go to state 19


state 10

   21 statement: ELSE . LSQUARE

    LSQUARE  shift, and go to state 24


state 11

   22 statement: WHILE . exp LFLOWER

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 25
    statement  go to state 19


state 12

   24 statement: READ . VAR

    VAR  shift, and go to state 26


state 13

   18 statement: PRINT . STRING
   25          | PRINT . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16
    STRING   shift, and go to state 27

    exp        go to state 28
    statement  go to state 19


state 14

    3 Block: END .

    $default  reduce using rule 3 (Block)


state 15

   14 exp: NUM .

    $default  reduce using rule 14 (exp)


state 16

   13 exp: VAR .
   17 statement: VAR . EQUAL STRING
   26          | VAR . EQUAL exp

    EQUAL  shift, and go to state 29

    $default  reduce using rule 13 (exp)


state 17

    2 Program: Program Block .

    $default  reduce using rule 2 (Program)


state 18

    4 Block: exp .
    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    $default  reduce using rule 4 (Block)


state 19

    5 exp: statement .

    $default  reduce using rule 5 (exp)


state 20

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   29 condition: exp . GREATER exp
   30          | exp . LESS exp
   31          | exp . ASSIGN exp

    GREATER   shift, and go to state 36
    LESS      shift, and go to state 37
    AND       shift, and go to state 30
    OR        shift, and go to state 31
    ASSIGN    shift, and go to state 38
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35


state 21

   27 statement: LPAREN condition . RPAREN

    RPAREN  shift, and go to state 39


state 22

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   12    | NOT exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 12 (exp)]
    OR        [reduce using rule 12 (exp)]
    PLUS      [reduce using rule 12 (exp)]
    SUB       [reduce using rule 12 (exp)]
    MULTIPLY  [reduce using rule 12 (exp)]
    DIV       [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


state 23

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   19 statement: IF exp . LSQUARE

    LSQUARE   shift, and go to state 40
    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35


state 24

   21 statement: ELSE LSQUARE .

    $default  reduce using rule 21 (statement)


state 25

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   22 statement: WHILE exp . LFLOWER

    LFLOWER   shift, and go to state 41
    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35


state 26

   24 statement: READ VAR .

    $default  reduce using rule 24 (statement)


state 27

   18 statement: PRINT STRING .

    $default  reduce using rule 18 (statement)


state 28

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   25 statement: PRINT exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 25 (statement)]
    OR        [reduce using rule 25 (statement)]
    PLUS      [reduce using rule 25 (statement)]
    SUB       [reduce using rule 25 (statement)]
    MULTIPLY  [reduce using rule 25 (statement)]
    DIV       [reduce using rule 25 (statement)]
    $default  reduce using rule 25 (statement)


state 29

   17 statement: VAR EQUAL . STRING
   26          | VAR EQUAL . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16
    STRING   shift, and go to state 42

    exp        go to state 43
    statement  go to state 19


state 30

   10 exp: exp AND . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 44
    statement  go to state 19


state 31

   11 exp: exp OR . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 45
    statement  go to state 19


state 32

    6 exp: exp PLUS . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 46
    statement  go to state 19


state 33

    7 exp: exp SUB . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 47
    statement  go to state 19


state 34

    8 exp: exp MULTIPLY . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 48
    statement  go to state 19


state 35

    9 exp: exp DIV . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 49
    statement  go to state 19


state 36

   29 condition: exp GREATER . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 50
    statement  go to state 19


state 37

   30 condition: exp LESS . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 51
    statement  go to state 19


state 38

   31 condition: exp ASSIGN . exp

    RFLOWER  shift, and go to state 3
    RSQUARE  shift, and go to state 4
    LPAREN   shift, and go to state 5
    NOT      shift, and go to state 6
    TRUE     shift, and go to state 7
    FALSE    shift, and go to state 8
    IF       shift, and go to state 9
    ELSE     shift, and go to state 10
    WHILE    shift, and go to state 11
    READ     shift, and go to state 12
    PRINT    shift, and go to state 13
    NUM      shift, and go to state 15
    VAR      shift, and go to state 16

    exp        go to state 52
    statement  go to state 19


state 39

   27 statement: LPAREN condition RPAREN .

    $default  reduce using rule 27 (statement)


state 40

   19 statement: IF exp LSQUARE .

    $default  reduce using rule 19 (statement)


state 41

   22 statement: WHILE exp LFLOWER .

    $default  reduce using rule 22 (statement)


state 42

   17 statement: VAR EQUAL STRING .

    $default  reduce using rule 17 (statement)


state 43

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   26 statement: VAR EQUAL exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 26 (statement)]
    OR        [reduce using rule 26 (statement)]
    $default  reduce using rule 26 (statement)


state 44

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   10    | exp AND exp .
   11    | exp . OR exp

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 10 (exp)]
    OR        [reduce using rule 10 (exp)]
    PLUS      [reduce using rule 10 (exp)]
    SUB       [reduce using rule 10 (exp)]
    MULTIPLY  [reduce using rule 10 (exp)]
    DIV       [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)


state 45

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   11    | exp OR exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 11 (exp)]
    OR        [reduce using rule 11 (exp)]
    PLUS      [reduce using rule 11 (exp)]
    SUB       [reduce using rule 11 (exp)]
    MULTIPLY  [reduce using rule 11 (exp)]
    DIV       [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


state 46

    6 exp: exp . PLUS exp
    6    | exp PLUS exp .
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 6 (exp)]
    OR        [reduce using rule 6 (exp)]
    $default  reduce using rule 6 (exp)


state 47

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    7    | exp SUB exp .
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    AND       [reduce using rule 7 (exp)]
    OR        [reduce using rule 7 (exp)]
    $default  reduce using rule 7 (exp)


state 48

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    8    | exp MULTIPLY exp .
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp

    AND  shift, and go to state 30
    OR   shift, and go to state 31

    AND       [reduce using rule 8 (exp)]
    OR        [reduce using rule 8 (exp)]
    $default  reduce using rule 8 (exp)


state 49

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
    9    | exp DIV exp .
   10    | exp . AND exp
   11    | exp . OR exp

    AND  shift, and go to state 30
    OR   shift, and go to state 31

    AND       [reduce using rule 9 (exp)]
    OR        [reduce using rule 9 (exp)]
    $default  reduce using rule 9 (exp)


state 50

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   29 condition: exp GREATER exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    $default  reduce using rule 29 (condition)


state 51

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   30 condition: exp LESS exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    $default  reduce using rule 30 (condition)


state 52

    6 exp: exp . PLUS exp
    7    | exp . SUB exp
    8    | exp . MULTIPLY exp
    9    | exp . DIV exp
   10    | exp . AND exp
   11    | exp . OR exp
   31 condition: exp ASSIGN exp .

    AND       shift, and go to state 30
    OR        shift, and go to state 31
    PLUS      shift, and go to state 32
    SUB       shift, and go to state 33
    MULTIPLY  shift, and go to state 34
    DIV       shift, and go to state 35

    $default  reduce using rule 31 (condition)
